# Generated by Django 3.0.10 on 2021-11-05 17:48

from django.db import migrations
from ..constants import METRICS


def create_metrics(apps, schema_editor):
    # create initial Metrics for Data Layer that are available
    Metric = apps.get_model("core", "Metric")
    DataLayer = apps.get_model("core", "DataLayer")

    for metric in METRICS:
        metric_obj, created = Metric.objects.get_or_create(
            metric_id=metric[0], name=metric[1], units=metric[2]
        )

        if created:
            for layer_id in metric[3]:
                try:
                    layer = DataLayer.objects.get(layer_id=layer_id)
                    metric_obj.data_layers.add(layer)
                except DataLayer.DoesNotExist:
                    pass


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0010_remove_metric_data_layer"),
    ]

    operations = [
        migrations.RunPython(create_metrics),
    ]
