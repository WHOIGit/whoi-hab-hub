FROM python:3.8-slim-buster AS base

ENV PYTHONUNBUFFERED 1

RUN apt-get update -qq && apt-get install -y -qq \
    unzip wget sudo less nano curl git gosu build-essential software-properties-common \
    # python basic libs
    gettext \
    # postgresql
    libpq-dev postgresql-client && \
    apt-get clean all && rm -rf /var/apt/lists/* && rm -rf /var/cache/apt/*

# use virtualenv to isolate Python packages to a single dir we can copy to next stage
#RUN python -m venv /opt/venv
# Set the ENV PATH to activate the virtualenv
#ENV PATH="/opt/venv/bin:$PATH"

# Requirements are installed here to ensure they will be cached.
COPY ./requirements /requirements
#RUN pip install --no-cache-dir -r /requirements/production.txt \
#    && rm -rf /requirements

RUN pip install --prefix=/install -r /requirements/production.txt \
    && rm -rf /requirements


# Build optimized image
FROM python:3.8-slim-buster AS build-image

ENV PYTHONUNBUFFERED 1

RUN apt-get update -qq && apt-get install -y -qq \
    # python basic libs
    gettext \
    # geodjango
    gdal-bin binutils libproj-dev libgdal-dev \
    # postgresql
    libpq-dev postgresql-client && \
    apt-get clean all && rm -rf /var/apt/lists/* && rm -rf /var/cache/apt/*

COPY --from=base /install /usr/local

# Make sure we use the virtualenv:
#ENV PATH="/opt/venv/bin:$PATH"

RUN groupadd -r django \
    && useradd --no-log-init -r -g django django

COPY ./compose/production/django/entrypoint /entrypoint
RUN sed -i 's/\r//' /entrypoint
RUN chmod +x /entrypoint
RUN chown django /entrypoint

COPY ./compose/production/django/start /start
RUN sed -i 's/\r//' /start
RUN chmod +x /start
RUN chown django /start

COPY ./compose/production/django/celery/worker/start /start-celeryworker
RUN sed -i 's/\r//' /start-celeryworker
RUN chmod +x /start-celeryworker
RUN chown django /start-celeryworker

COPY ./compose/production/django/celery/beat/start /start-celerybeat
RUN sed -i 's/\r//' /start-celerybeat
RUN chmod +x /start-celerybeat
RUN chown django /start-celerybeat

COPY ./compose/production/django/celery/flower/start /start-flower
RUN sed -i 's/\r//' /start-flower
RUN chmod +x /start-flower
RUN chown django /start-flower

COPY . /app
WORKDIR /app

RUN chown -R django /app

USER django

ENTRYPOINT ["/entrypoint"]
